continue
response
continue
data
response
continue
response
continue
response.request.options
response
data.to_json
continue
response.request.options
response
continue
response
continue
response
response.request.options
response.request.options.headers
continue
response.request.options.headers
response.request.options
response.request.options.body
response
continue
response.request
response
continue
response
data.to_json
data
continue
response.request.options[:body]
response.request.options
response.request.options.body
response
continue
response.request.body
response.request.headers
response.request
response.requeset
continue
response.request.headers
continue
response.request.body
response.request
response.body
response
continue
response.request.options
response.request.headers
response.request.body
response.request
response
continue
response.request
response
continue
response.request
response
continue
response.request
response
continue
HTTParty.post(url, body: data.to_json, headers: headers)
continue
HTTParty.post(url, body: data, headers: headers)
response.request
response
continue
response
continue
response.request
continue
response
continue
response
response.request
continue
response.request
response
continue
HTTParty.get(url, body: data, headers: headers)
response.request
response.methods
response
continue
"{ 'requests': [ { 'individual_id': '#{params[:id].to_s}' } ] }".to_json
"{ 'requests': [ { 'individual_id': '#{params[:id].to_s}' } ] }"
"{ 'requests': [ { 'individual_id': '#{params[:id].to_s}' } ]
"{ 'requests': [ { 'individual_id': #{params[:id].to_s} } ] }"
"{ 'requests': [ { 'individual_id': #{params[:id].to_s}, ] }"
'{ "requests": [ { "individual_id": "#{params[:id]}" ] }'
"{ 'requests': [ { 'individual_id': #{params[:id]}.to_s, ] }"
data
continue
HTTParty.get(url, body: ids, headers: headers)
HTTParty.get(url, body: ids.to_json, headers: headers)
ids.to_json
ids
continue
HTTParty.get(url, body: ids.to_json, headers: headers)
continue
HTTParty.get(url, body: ids.to_json, headers: headers)
continue
token
continue
Rails.cache.read("#{params[:provider_id]}/access_token")
token
continue
params
continue
Rails.cache.fetch("#{params[:provider_id]}/access_token", expires_in: 24.hours)
continue
token
params
continue
params
continue
token
params
continue
Rails.cache.fetch('yes')
Rails.cache.write('yes', true)
Rails.cache.read("gusto/access_token")
Rails.cache.read("guston/access_token")
cache.read("gusto/access_token")
cache.read(gusto/access_token)
cache.read
Rails.cache.fetch("gusto")
Rails.cache.fetch('gusto")
Rails.cache.fetch(:gusto)
"#{params[:provider_id]}"
token
continue
Rails.cache.fetch("#{params[:provider_id]}", expires_in: 24.hours) do
   30:       new_token
   31:     end
continue
params
continue
params[:provider_id]
continue
token
continue
Rails.cache.fetch("#{params[:provider_id]}/access_token")
Rails.cache.fetch("#{params[:provider_id]}/access_token", expires_in: 24.hours)
params[:provider_id]
continue
params[:provider_id]
continue
params[:provider_id]
params
continue
params
token
continue
token
params
continue
params
e
continue
params
continue
employee
params
continue
params
continue
params
continue
e["id"]
e[:id]
ed[:id]
e.id
params[:id]
params
e
employee
continue
params
continue
params
continue
params
continue
response
continue
employee
continue
response
continue
response
continue
HTTParty.get(url, body: ids.to_json, headers: headers)
response
continue
HTTParty.get(url, body: ids, headers: headers)
HTTParty.get(url, data: ids, headers: headers)
HTTParty.get(url, data: ids, headers: headers
response
continue
headers
ids.to_json
ids
response
continue
response
continue
response
continue
employee['id']
employee[:id]
employee
continue
employee
continue
response
continue
response.parsed_response['individuals'].to_json.first['id']
response.parsed_response['individuals'].first['id']
response.parsed_response['individuals'].first.id
response.parsed_response['individuals'].first[:id]
response.parsed_response['individuals'].first
response.parsed_response['individuals'].count
response.parsed_response['individuals']
response.parsed_response.individuals
response.parsed_response
response.individuals.first
response.first
response
continue
response
continue
response["access_token"]
response[:access_token]
response.to_json
response
continue
provider_options
continue
params[:id]
continue
provider_options
response
continue
params[:id]
continue
params[:id]
continue
provider[:name]
provider.name
provider
continue
